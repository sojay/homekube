---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 75.18.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    crds:
      enabled: false
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      enabled: true
      ingress:
        enabled: false
      alertmanagerSpec:
        replicas: 1
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 2Gi
    grafana:
      enabled: true
      defaultDashboardsTimezone: America/New_York
      admin:
        existingSecret: grafana-admin-secret
        userKey: admin-user
        passwordKey: admin-password
      ingress:
        enabled: false
      persistence:
        enabled: true
        storageClassName: longhorn
        accessModes: ["ReadWriteOnce"]
        size: 5Gi
      plugins:
        - grafana-clock-panel
        - grafana-piechart-panel
        - grafana-worldmap-panel
        - natel-discrete-panel
        - pr0ps-trackmap-panel
        - vonage-status-panel
      serviceMonitor:
        enabled: true
      sidecar:
        dashboards:
          enabled: true
          searchNamespace: ALL
          folderAnnotation: grafana_folder
          provider:
            foldersFromFilesStructure: true
        datasources:
          enabled: true
          searchNamespace: ALL
      # Configure data sources with correct namespace URLs
      forceDeployDatasources: true
      datasources:
        datasources.yaml:
          apiVersion: 1
          datasources:
            - name: Prometheus
              type: prometheus
              uid: prometheus
              url: http://kube-prometheus-stack-prometheus.observability:9090
              access: proxy
              isDefault: true
              jsonData:
                httpMethod: POST
                timeInterval: 30s
            - name: Alertmanager
              type: alertmanager
              uid: alertmanager
              url: http://kube-prometheus-stack-alertmanager.observability:9093
              access: proxy
              jsonData:
                handleGrafanaManagedAlerts: false
            - name: Loki
              type: loki
              uid: loki
              url: http://loki-gateway.observability:80
              access: proxy
              jsonData:
                maxLines: 1000
                derivedFields:
                  - name: "TraceID"
                    matcherRegex: "trace_id=(\\w+)"
                    url: "$${__value.raw}"
    prometheus:
      enabled: true
      ingress:
        enabled: false
      prometheusSpec:
        replicas: 1
        retention: 15d
        retentionSize: 4GB
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: nfs
              accessModes: ["ReadWriteMany"]
              resources:
                requests:
                  storage: 5Gi
    nodeExporter:
      enabled: true
      serviceMonitor:
        enabled: true
    kubeStateMetrics:
      enabled: true
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false